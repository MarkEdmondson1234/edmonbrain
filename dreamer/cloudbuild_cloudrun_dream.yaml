substitutions:
  _IMAGE_NAME: your-image-name
  _SERVICE_NAME: edmonbrain-dreamer
  _REGION: your-region
  _GCS_BUCKET: your-gcs-bucket
  _SERVICE_ACCOUNT: your-service@your-project.iam.gserviceaccount.com
  _CONFIG_FILE: config.json

steps:
  - name: 'gcr.io/cloud-builders/gsutil'
    id: download config file
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      gsutil cp ${_GCS_BUCKET}/${_CONFIG_FILE} ${_CONFIG_FILE}
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      cat <<EOF >Dockerfile_cloudrun
      FROM gcr.io/$PROJECT_ID/prebuild/${_IMAGE_NAME}

      RUN pip install gunicorn google-cloud-discoveryengine
      
      COPY . .

      EXPOSE 8080
      ENV GCS_BUCKET=${_GCS_BUCKET}

      CMD exec gunicorn --bind :\$$PORT --workers 2 --timeout 0 dreamer.app:app
      EOF

  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/${_IMAGE_NAME}/dreamer', '-f', 'Dockerfile_cloudrun', '.']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/${_IMAGE_NAME}/dreamer']

  # Deploy the image to Cloud Run
  - name: "gcr.io/cloud-builders/gcloud"
    id: deploy cloud run
    entrypoint: bash
    args:
      - "-c"
      - |
        gcloud run deploy ${_SERVICE_NAME} --image gcr.io/$PROJECT_ID/${_IMAGE_NAME}/dreamer \
           --region ${_REGION} \
           --platform managed \
           --allow-unauthenticated \
           --memory 2Gi \
           --cpu 1 \
           --min-instances 0 \
           --max-instances 3 \
           --service-account ${_SERVICE_ACCOUNT} \
           --update-secrets=OPENAI_API_KEY=OPENAI_API_KEY:latest \
           --update-secrets=LANGCHAIN_API_KEY=LANGCHAIN_API_KEY:latest \
           --timeout=25m
  - name: "gcr.io/cloud-builders/gcloud"
    id: create scheduler job if not exists
    entrypoint: bash
    args:
      - "-c"
      - |
        SERVICE_URL=$(gcloud run services describe ${_SERVICE_NAME} --region ${_REGION} --format 'value(status.url)')
        SCHEDULER_JOB_NAME=${_SERVICE_NAME}-scheduler
        
        # Check if the scheduler job exists
        if ! gcloud scheduler jobs describe $$SCHEDULER_JOB_NAME --location ${_REGION} > /dev/null 2>&1; then
          # Create a new scheduler job only if it does not exist
          gcloud scheduler jobs create http $$SCHEDULER_JOB_NAME \
            --location ${_REGION} \
            --schedule "44 23 * * *" \
            --http-method GET \
            --uri $$SERVICE_URL/dream/edmonbrain \
            --oidc-service-account-email ${_SERVICE_ACCOUNT}
        fi
